#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace E_LearningMVC
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
	public partial class niveauEducationDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertniveauEducation(niveauEducation instance);
    partial void UpdateniveauEducation(niveauEducation instance);
    partial void DeleteniveauEducation(niveauEducation instance);
    partial void Insertcredential(credential instance);
    partial void Updatecredential(credential instance);
    partial void Deletecredential(credential instance);
    partial void InsertInscription(Inscription instance);
    partial void UpdateInscription(Inscription instance);
    partial void DeleteInscription(Inscription instance);
    partial void Insertprof(prof instance);
    partial void Updateprof(prof instance);
    partial void Deleteprof(prof instance);
    partial void InsertCour(Cour instance);
    partial void UpdateCour(Cour instance);
    partial void DeleteCour(Cour instance);
    partial void InsertEleveCour(EleveCour instance);
    partial void UpdateEleveCour(EleveCour instance);
    partial void DeleteEleveCour(EleveCour instance);
    #endregion
		
		public niveauEducationDataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Database1ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public niveauEducationDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public niveauEducationDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public niveauEducationDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public niveauEducationDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<niveauEducation> niveauEducations
		{
			get
			{
				return this.GetTable<niveauEducation>();
			}
		}
		
		public System.Data.Linq.Table<credential> credentials
		{
			get
			{
				return this.GetTable<credential>();
			}
		}
		
		public System.Data.Linq.Table<Inscription> Inscriptions
		{
			get
			{
				return this.GetTable<Inscription>();
			}
		}
		
		public System.Data.Linq.Table<prof> profs
		{
			get
			{
				return this.GetTable<prof>();
			}
		}
		
		public System.Data.Linq.Table<Cour> Cours
		{
			get
			{
				return this.GetTable<Cour>();
			}
		}
		
		public System.Data.Linq.Table<EleveCour> EleveCours
		{
			get
			{
				return this.GetTable<EleveCour>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.niveauEducation")]
	public partial class niveauEducation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _nom;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    #endregion
		
		public niveauEducation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(50)")]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.credentials")]
	public partial class credential : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _username;
		
		private string _password;
		
		private int _firsttime;
		
		private string _email;
		
		private EntitySet<EleveCour> _EleveCours;
		
		private EntityRef<Inscription> _Inscription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnfirsttimeChanging(int value);
    partial void OnfirsttimeChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public credential()
		{
			this._EleveCours = new EntitySet<EleveCour>(new Action<EleveCour>(this.attach_EleveCours), new Action<EleveCour>(this.detach_EleveCours));
			this._Inscription = default(EntityRef<Inscription>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firsttime", DbType="Int NOT NULL")]
		public int firsttime
		{
			get
			{
				return this._firsttime;
			}
			set
			{
				if ((this._firsttime != value))
				{
					this.OnfirsttimeChanging(value);
					this.SendPropertyChanging();
					this._firsttime = value;
					this.SendPropertyChanged("firsttime");
					this.OnfirsttimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					if (this._Inscription.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="credential_EleveCour", Storage="_EleveCours", ThisKey="Id", OtherKey="ideleve")]
		public EntitySet<EleveCour> EleveCours
		{
			get
			{
				return this._EleveCours;
			}
			set
			{
				this._EleveCours.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inscription_credential", Storage="_Inscription", ThisKey="email", OtherKey="email", IsForeignKey=true)]
		public Inscription Inscription
		{
			get
			{
				return this._Inscription.Entity;
			}
			set
			{
				Inscription previousValue = this._Inscription.Entity;
				if (((previousValue != value) 
							|| (this._Inscription.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inscription.Entity = null;
						previousValue.credentials.Remove(this);
					}
					this._Inscription.Entity = value;
					if ((value != null))
					{
						value.credentials.Add(this);
						this._email = value.email;
					}
					else
					{
						this._email = default(string);
					}
					this.SendPropertyChanged("Inscription");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EleveCours(EleveCour entity)
		{
			this.SendPropertyChanging();
			entity.credential = this;
		}
		
		private void detach_EleveCours(EleveCour entity)
		{
			this.SendPropertyChanging();
			entity.credential = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inscription")]
	public partial class Inscription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _nom;
		
		private string _email;
		
		private string _education;
		
		private EntitySet<credential> _credentials;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OneducationChanging(string value);
    partial void OneducationChanged();
    #endregion
		
		public Inscription()
		{
			this._credentials = new EntitySet<credential>(new Action<credential>(this.attach_credentials), new Action<credential>(this.detach_credentials));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_education", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string education
		{
			get
			{
				return this._education;
			}
			set
			{
				if ((this._education != value))
				{
					this.OneducationChanging(value);
					this.SendPropertyChanging();
					this._education = value;
					this.SendPropertyChanged("education");
					this.OneducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inscription_credential", Storage="_credentials", ThisKey="email", OtherKey="email")]
		public EntitySet<credential> credentials
		{
			get
			{
				return this._credentials;
			}
			set
			{
				this._credentials.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_credentials(credential entity)
		{
			this.SendPropertyChanging();
			entity.Inscription = this;
		}
		
		private void detach_credentials(credential entity)
		{
			this.SendPropertyChanging();
			entity.Inscription = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.profs")]
	public partial class prof : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _username;
		
		private string _password;
		
		private EntitySet<Cour> _Cours;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public prof()
		{
			this._Cours = new EntitySet<Cour>(new Action<Cour>(this.attach_Cours), new Action<Cour>(this.detach_Cours));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="prof_Cour", Storage="_Cours", ThisKey="Id", OtherKey="idprof")]
		public EntitySet<Cour> Cours
		{
			get
			{
				return this._Cours;
			}
			set
			{
				this._Cours.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cours(Cour entity)
		{
			this.SendPropertyChanging();
			entity.prof = this;
		}
		
		private void detach_Cours(Cour entity)
		{
			this.SendPropertyChanging();
			entity.prof = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cours")]
	public partial class Cour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _idprof;
		
		private string _titre;
		
		private string _chapitres;
		
		private string _date;
		
		private string _niveaueducation;
		
		private string _description;
		
		private string _image;
		
		private EntitySet<EleveCour> _EleveCours;
		
		private EntityRef<prof> _prof;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnidprofChanging(int value);
    partial void OnidprofChanged();
    partial void OntitreChanging(string value);
    partial void OntitreChanged();
    partial void OnchapitresChanging(string value);
    partial void OnchapitresChanged();
    partial void OndateChanging(string value);
    partial void OndateChanged();
    partial void OnniveaueducationChanging(string value);
    partial void OnniveaueducationChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    #endregion
		
		public Cour()
		{
			this._EleveCours = new EntitySet<EleveCour>(new Action<EleveCour>(this.attach_EleveCours), new Action<EleveCour>(this.detach_EleveCours));
			this._prof = default(EntityRef<prof>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idprof", DbType="Int NOT NULL")]
		public int idprof
		{
			get
			{
				return this._idprof;
			}
			set
			{
				if ((this._idprof != value))
				{
					if (this._prof.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidprofChanging(value);
					this.SendPropertyChanging();
					this._idprof = value;
					this.SendPropertyChanged("idprof");
					this.OnidprofChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string titre
		{
			get
			{
				return this._titre;
			}
			set
			{
				if ((this._titre != value))
				{
					this.OntitreChanging(value);
					this.SendPropertyChanging();
					this._titre = value;
					this.SendPropertyChanged("titre");
					this.OntitreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chapitres", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string chapitres
		{
			get
			{
				return this._chapitres;
			}
			set
			{
				if ((this._chapitres != value))
				{
					this.OnchapitresChanging(value);
					this.SendPropertyChanging();
					this._chapitres = value;
					this.SendPropertyChanged("chapitres");
					this.OnchapitresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_niveaueducation", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string niveaueducation
		{
			get
			{
				return this._niveaueducation;
			}
			set
			{
				if ((this._niveaueducation != value))
				{
					this.OnniveaueducationChanging(value);
					this.SendPropertyChanging();
					this._niveaueducation = value;
					this.SendPropertyChanged("niveaueducation");
					this.OnniveaueducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cour_EleveCour", Storage="_EleveCours", ThisKey="Id", OtherKey="idcours")]
		public EntitySet<EleveCour> EleveCours
		{
			get
			{
				return this._EleveCours;
			}
			set
			{
				this._EleveCours.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="prof_Cour", Storage="_prof", ThisKey="idprof", OtherKey="Id", IsForeignKey=true)]
		public prof prof
		{
			get
			{
				return this._prof.Entity;
			}
			set
			{
				prof previousValue = this._prof.Entity;
				if (((previousValue != value) 
							|| (this._prof.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._prof.Entity = null;
						previousValue.Cours.Remove(this);
					}
					this._prof.Entity = value;
					if ((value != null))
					{
						value.Cours.Add(this);
						this._idprof = value.Id;
					}
					else
					{
						this._idprof = default(int);
					}
					this.SendPropertyChanged("prof");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EleveCours(EleveCour entity)
		{
			this.SendPropertyChanging();
			entity.Cour = this;
		}
		
		private void detach_EleveCours(EleveCour entity)
		{
			this.SendPropertyChanging();
			entity.Cour = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EleveCours")]
	public partial class EleveCour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ideleve;
		
		private int _idcours;
		
		private EntityRef<Cour> _Cour;
		
		private EntityRef<credential> _credential;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnideleveChanging(int value);
    partial void OnideleveChanged();
    partial void OnidcoursChanging(int value);
    partial void OnidcoursChanged();
    #endregion
		
		public EleveCour()
		{
			this._Cour = default(EntityRef<Cour>);
			this._credential = default(EntityRef<credential>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ideleve", DbType="Int NOT NULL")]
		public int ideleve
		{
			get
			{
				return this._ideleve;
			}
			set
			{
				if ((this._ideleve != value))
				{
					if (this._credential.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnideleveChanging(value);
					this.SendPropertyChanging();
					this._ideleve = value;
					this.SendPropertyChanged("ideleve");
					this.OnideleveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idcours", DbType="Int NOT NULL")]
		public int idcours
		{
			get
			{
				return this._idcours;
			}
			set
			{
				if ((this._idcours != value))
				{
					if (this._Cour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidcoursChanging(value);
					this.SendPropertyChanging();
					this._idcours = value;
					this.SendPropertyChanged("idcours");
					this.OnidcoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cour_EleveCour", Storage="_Cour", ThisKey="idcours", OtherKey="Id", IsForeignKey=true)]
		public Cour Cour
		{
			get
			{
				return this._Cour.Entity;
			}
			set
			{
				Cour previousValue = this._Cour.Entity;
				if (((previousValue != value) 
							|| (this._Cour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cour.Entity = null;
						previousValue.EleveCours.Remove(this);
					}
					this._Cour.Entity = value;
					if ((value != null))
					{
						value.EleveCours.Add(this);
						this._idcours = value.Id;
					}
					else
					{
						this._idcours = default(int);
					}
					this.SendPropertyChanged("Cour");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="credential_EleveCour", Storage="_credential", ThisKey="ideleve", OtherKey="Id", IsForeignKey=true)]
		public credential credential
		{
			get
			{
				return this._credential.Entity;
			}
			set
			{
				credential previousValue = this._credential.Entity;
				if (((previousValue != value) 
							|| (this._credential.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._credential.Entity = null;
						previousValue.EleveCours.Remove(this);
					}
					this._credential.Entity = value;
					if ((value != null))
					{
						value.EleveCours.Add(this);
						this._ideleve = value.Id;
					}
					else
					{
						this._ideleve = default(int);
					}
					this.SendPropertyChanged("credential");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
